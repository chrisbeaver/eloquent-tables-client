var eloquentTables = (function () {
'use strict';

var tables = document.getElementsByClassName('eloquent-table');

var headers = [].slice.call(tables[0].tHead.querySelectorAll('th')).map(function (header) {
    return header.innerHTML;
});

var asyncGenerator = function () {
  function AwaitValue(value) {
    this.value = value;
  }

  function AsyncGenerator(gen) {
    var front, back;

    function send(key, arg) {
      return new Promise(function (resolve, reject) {
        var request = {
          key: key,
          arg: arg,
          resolve: resolve,
          reject: reject,
          next: null
        };

        if (back) {
          back = back.next = request;
        } else {
          front = back = request;
          resume(key, arg);
        }
      });
    }

    function resume(key, arg) {
      try {
        var result = gen[key](arg);
        var value = result.value;

        if (value instanceof AwaitValue) {
          Promise.resolve(value.value).then(function (arg) {
            resume("next", arg);
          }, function (arg) {
            resume("throw", arg);
          });
        } else {
          settle(result.done ? "return" : "normal", result.value);
        }
      } catch (err) {
        settle("throw", err);
      }
    }

    function settle(type, value) {
      switch (type) {
        case "return":
          front.resolve({
            value: value,
            done: true
          });
          break;

        case "throw":
          front.reject(value);
          break;

        default:
          front.resolve({
            value: value,
            done: false
          });
          break;
      }

      front = front.next;

      if (front) {
        resume(front.key, front.arg);
      } else {
        back = null;
      }
    }

    this._invoke = send;

    if (typeof gen.return !== "function") {
      this.return = undefined;
    }
  }

  if (typeof Symbol === "function" && Symbol.asyncIterator) {
    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
      return this;
    };
  }

  AsyncGenerator.prototype.next = function (arg) {
    return this._invoke("next", arg);
  };

  AsyncGenerator.prototype.throw = function (arg) {
    return this._invoke("throw", arg);
  };

  AsyncGenerator.prototype.return = function (arg) {
    return this._invoke("return", arg);
  };

  return {
    wrap: function (fn) {
      return function () {
        return new AsyncGenerator(fn.apply(this, arguments));
      };
    },
    await: function (value) {
      return new AwaitValue(value);
    }
  };
}();





var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();







var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

















var set$1 = function set$1(object, property, value, receiver) {
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent !== null) {
      set$1(parent, property, value, receiver);
    }
  } else if ("value" in desc && desc.writable) {
    desc.value = value;
  } else {
    var setter = desc.set;

    if (setter !== undefined) {
      setter.call(receiver, value);
    }
  }

  return value;
};

var Header = function () {
    function Header(elem) {
        classCallCheck(this, Header);

        this.elem = elem; // HTML Element
        this.columns = this.load();
    }

    createClass(Header, [{
        key: 'load',
        value: function load() {
            return [].slice.call(this.elem.querySelectorAll('th')).map(function (header) {
                return header.innerHTML;
            });
        }
    }]);
    return Header;
}();

var _class = function () {
    function _class() {
        classCallCheck(this, _class);

        this.load();
    }

    createClass(_class, [{
        key: 'load',
        value: function load() {

            var r = new XMLHttpRequest();

            r.open('POST', '/products', true);
            r.setRequestHeader('X-CSRF-TOKEN', '{{ csrf_token() }}');
            r.setRequestHeader('take', '10');
            r.setRequestHeader('skip', '20');
            r.setRequestHeader('search', 'Wiza');
            r.addEventListener('load', this.handler);
            r.onreadystatechange = function () {
                if (r.readyState != 4 || r.status != 200) return;
            };
            r.send('take=1');
        }
    }, {
        key: 'handler',
        value: function handler() {
            this.rows = JSON.parse(this.responseText);
            console.log(this.rows);
        }
    }]);
    return _class;
}();

// import { Paginator } from './paginator';
var Table = function () {
    function Table(elem) {
        classCallCheck(this, Table);

        this.table = elem; // HTML Table Element
        this.parent = this.initialize();
        this.header = this._loadHeader();
        this._loadData();
    }

    // load() {

    //     let r = new XMLHttpRequest();
    //     r.open('POST', this.table.getAttribute('data-target'), true);
    //     r.setRequestHeader('X-CSRF-TOKEN', '{{ csrf_token() }}');
    //     r.setRequestHeader('take', '10');
    //     r.setRequestHeader('skip', '20');
    //     r.setRequestHeader('search', 'Wiza');
    //     r.addEventListener('load', ajaxListener);
    //     r.onreadystatechange = function () {
    //         if (r.readyState != 4 || r.status != 200) return; 
    //     };
    //     r.send();

    // }

    createClass(Table, [{
        key: 'initialize',
        value: function initialize() {
            // Put wrapper around table.
            var wrapper = document.createElement('div');
            wrapper.className = 'table-wrapper';
            var table = this.table;
            table.parentElement.insertBefore(wrapper, table);
            wrapper.appendChild(table);
            return wrapper;
        }
    }, {
        key: '_loadHeader',
        value: function _loadHeader() {
            return new Header(this.table.tHead);
        }
    }, {
        key: '_loadData',
        value: function _loadData() {
            this.data = new _class();
        }
    }]);
    return Table;
}();

var elem = tables[0];
var table = new Table(elem);

return table;

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL2dsb2JhbHMuanMiLCIuLi8uLi9zcmMvc2NyaXB0cy9tb2R1bGVzL2hlYWRlci5qcyIsIi4uLy4uL3NyYy9zY3JpcHRzL21vZHVsZXMvYWpheC5qcyIsIi4uLy4uL3NyYy9zY3JpcHRzL21vZHVsZXMvdGFibGUuanMiLCIuLi8uLi9zcmMvc2NyaXB0cy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBsZXQgdGFibGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZWxvcXVlbnQtdGFibGUnKTtcblxuZXhwb3J0IGxldCBoZWFkZXJzID0gW10uc2xpY2VcbiAgICAuY2FsbCh0YWJsZXNbMF0udEhlYWQucXVlcnlTZWxlY3RvckFsbCgndGgnKSlcbiAgICAubWFwKGZ1bmN0aW9uKGhlYWRlcikge1xuICAgICAgICByZXR1cm4gaGVhZGVyLmlubmVySFRNTDtcbiAgICB9KTtcblxuZXhwb3J0IGxldCB0b3RhbF9jb3VudCA9IHsgdmFsdWU6IDAsXG4gICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xuXHRcdHRoaXMudmFsdWUgPSB2YWx1ZTtcbiBcdH1cbn07XG5cbmV4cG9ydCBsZXQgcm93cyA9IHsgXG5cdGNvbGxlY3Rpb246IG51bGwsXG5cdHNldDogZnVuY3Rpb24odmFsdWUpIHtcblx0XHR0aGlzLmNvbGxlY3Rpb24gPSB2YWx1ZTtcblx0fVxufTtcblxuZXhwb3J0IGxldCBjb25maWcgPSB7XG4gICAgdGFibGVSb3dzOiAxMCxcbiAgICBzZXRUYWJsZVJvd3M6IGZ1bmN0aW9uKHZhbHVlKSB7IHRoaXMudGFibGVSb3dzID0gdmFsdWU7IH1cbn0iLCJleHBvcnQgY2xhc3MgSGVhZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtKSB7XG4gICAgICAgIHRoaXMuZWxlbSA9IGVsZW07ICAvLyBIVE1MIEVsZW1lbnRcbiAgICAgICAgdGhpcy5jb2x1bW5zID0gdGhpcy5sb2FkKCk7XG4gICAgfVxuICBcbiAgICBsb2FkKCkge1xuICAgICAgICByZXR1cm4gW10uc2xpY2VcbiAgICAgICAgICAuY2FsbCh0aGlzLmVsZW0ucXVlcnlTZWxlY3RvckFsbCgndGgnKSlcbiAgICAgICAgICAubWFwKGZ1bmN0aW9uKGhlYWRlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBoZWFkZXIuaW5uZXJIVE1MO1xuICAgICAgICAgIH0pO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgdGhpcy5sb2FkKClcbiAgICB9XG4gIFxuICAgIGxvYWQoKSB7XG4gICAgICAgIFxuICAgICAgICBsZXQgciA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgIFxuICAgICAgICByLm9wZW4oJ1BPU1QnLCAnL3Byb2R1Y3RzJywgdHJ1ZSk7XG4gICAgICAgIHIuc2V0UmVxdWVzdEhlYWRlcignWC1DU1JGLVRPS0VOJywgJ3t7IGNzcmZfdG9rZW4oKSB9fScpO1xuICAgICAgICByLnNldFJlcXVlc3RIZWFkZXIoJ3Rha2UnLCAnMTAnKTtcbiAgICAgICAgci5zZXRSZXF1ZXN0SGVhZGVyKCdza2lwJywgJzIwJyk7XG4gICAgICAgIHIuc2V0UmVxdWVzdEhlYWRlcignc2VhcmNoJywgJ1dpemEnKTtcbiAgICAgICAgci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgdGhpcy5oYW5kbGVyKTtcbiAgICAgICAgci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoci5yZWFkeVN0YXRlICE9IDQgfHwgci5zdGF0dXMgIT0gMjAwKSByZXR1cm47IFxuICAgICAgICB9O1xuICAgICAgICByLnNlbmQoJ3Rha2U9MScpO1xuICAgICAgICBcbiAgICB9XG5cbiAgICBoYW5kbGVyKCkge1xuICAgICAgICB0aGlzLnJvd3MgPSAoSlNPTi5wYXJzZSh0aGlzLnJlc3BvbnNlVGV4dCkpO1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnJvd3MpO1xuICAgIH1cbn0iLCIvLyBpbXBvcnQgeyBQYWdpbmF0b3IgfSBmcm9tICcuL3BhZ2luYXRvcic7XG5pbXBvcnQgeyBIZWFkZXIgfSBmcm9tICcuL2hlYWRlcic7XG5pbXBvcnQgUmVtb3RlRGF0YSBmcm9tICcuL2FqYXgnO1xuXG5leHBvcnQgY2xhc3MgVGFibGUge1xuICAgIGNvbnN0cnVjdG9yKGVsZW0pIHtcbiAgICAgICAgdGhpcy50YWJsZSA9IGVsZW07ICAvLyBIVE1MIFRhYmxlIEVsZW1lbnRcbiAgICAgICAgdGhpcy5wYXJlbnQgPSB0aGlzLmluaXRpYWxpemUoKTtcbiAgICAgICAgdGhpcy5oZWFkZXIgPSB0aGlzLl9sb2FkSGVhZGVyKCk7XG4gICAgICAgIHRoaXMuX2xvYWREYXRhKCk7XG4gICAgfVxuICBcbiAgICAvLyBsb2FkKCkge1xuICAgICAgICBcbiAgICAvLyAgICAgbGV0IHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAvLyAgICAgci5vcGVuKCdQT1NUJywgdGhpcy50YWJsZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdGFyZ2V0JyksIHRydWUpO1xuICAgIC8vICAgICByLnNldFJlcXVlc3RIZWFkZXIoJ1gtQ1NSRi1UT0tFTicsICd7eyBjc3JmX3Rva2VuKCkgfX0nKTtcbiAgICAvLyAgICAgci5zZXRSZXF1ZXN0SGVhZGVyKCd0YWtlJywgJzEwJyk7XG4gICAgLy8gICAgIHIuc2V0UmVxdWVzdEhlYWRlcignc2tpcCcsICcyMCcpO1xuICAgIC8vICAgICByLnNldFJlcXVlc3RIZWFkZXIoJ3NlYXJjaCcsICdXaXphJyk7XG4gICAgLy8gICAgIHIuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGFqYXhMaXN0ZW5lcik7XG4gICAgLy8gICAgIHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgIC8vICAgICAgICAgaWYgKHIucmVhZHlTdGF0ZSAhPSA0IHx8IHIuc3RhdHVzICE9IDIwMCkgcmV0dXJuOyBcbiAgICAvLyAgICAgfTtcbiAgICAvLyAgICAgci5zZW5kKCk7XG5cbiAgICAvLyB9XG4gICAgXG4gICAgaW5pdGlhbGl6ZSgpIHtcbiAgICAgICAgLy8gUHV0IHdyYXBwZXIgYXJvdW5kIHRhYmxlLlxuICAgICAgICBsZXQgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB3cmFwcGVyLmNsYXNzTmFtZSA9ICd0YWJsZS13cmFwcGVyJztcbiAgICAgICAgbGV0IHRhYmxlID0gdGhpcy50YWJsZTtcbiAgICAgICAgdGFibGUucGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUod3JhcHBlciwgdGFibGUpO1xuICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKHRhYmxlKTtcbiAgICAgICAgcmV0dXJuIHdyYXBwZXI7XG4gICAgfVxuXG4gICAgX2xvYWRIZWFkZXIoKSB7XG4gICAgICAgIHJldHVybiBuZXcgSGVhZGVyKHRoaXMudGFibGUudEhlYWQpO1xuICAgIH1cblxuICAgIF9sb2FkRGF0YSgpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gbmV3IFJlbW90ZURhdGE7XG4gICAgfVxufSIsImltcG9ydCB7IHRhYmxlcyB9IGZyb20gJy4vZ2xvYmFscyc7XG5pbXBvcnQgeyBUYWJsZSB9IGZyb20gJy4vbW9kdWxlcy90YWJsZSc7XG5cbmxldCBlbGVtID0gdGFibGVzWzBdO1xubGV0IHRhYmxlID0gbmV3IFRhYmxlKGVsZW0pO1xuLy8gdGFibGUubG9hZCgpO1xuXG5leHBvcnQgZGVmYXVsdCB0YWJsZTtcbiJdLCJuYW1lcyI6WyJ0YWJsZXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJoZWFkZXJzIiwic2xpY2UiLCJjYWxsIiwidEhlYWQiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWFwIiwiaGVhZGVyIiwiaW5uZXJIVE1MIiwiSGVhZGVyIiwiZWxlbSIsImNvbHVtbnMiLCJsb2FkIiwiciIsIlhNTEh0dHBSZXF1ZXN0Iiwib3BlbiIsInNldFJlcXVlc3RIZWFkZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlciIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJzZW5kIiwicm93cyIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsImxvZyIsIlRhYmxlIiwidGFibGUiLCJwYXJlbnQiLCJpbml0aWFsaXplIiwiX2xvYWRIZWFkZXIiLCJfbG9hZERhdGEiLCJ3cmFwcGVyIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsInBhcmVudEVsZW1lbnQiLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImRhdGEiLCJSZW1vdGVEYXRhIl0sIm1hcHBpbmdzIjoiOzs7QUFBTyxJQUFJQSxTQUFTQyxTQUFTQyxzQkFBVCxDQUFnQyxnQkFBaEMsQ0FBYjs7QUFFUCxBQUFPLElBQUlDLFVBQVUsR0FBR0MsS0FBSCxDQUNoQkMsSUFEZ0IsQ0FDWEwsT0FBTyxDQUFQLEVBQVVNLEtBQVYsQ0FBZ0JDLGdCQUFoQixDQUFpQyxJQUFqQyxDQURXLEVBRWhCQyxHQUZnQixDQUVaLFVBQVNDLE1BQVQsRUFBaUI7V0FDWEEsT0FBT0MsU0FBZDtDQUhhLENBQWQsQ0FNUCxBQUFPLEFBTVAsQUFBTyxBQU9QLEFBQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDckJNQyxNQUFiO29CQUNnQkMsSUFBWixFQUFrQjs7O2FBQ1RBLElBQUwsR0FBWUEsSUFBWixDQURjO2FBRVRDLE9BQUwsR0FBZSxLQUFLQyxJQUFMLEVBQWY7Ozs7OytCQUdHO21CQUNJLEdBQUdWLEtBQUgsQ0FDSkMsSUFESSxDQUNDLEtBQUtPLElBQUwsQ0FBVUwsZ0JBQVYsQ0FBMkIsSUFBM0IsQ0FERCxFQUVKQyxHQUZJLENBRUEsVUFBU0MsTUFBVCxFQUFpQjt1QkFDVEEsT0FBT0MsU0FBZDthQUhELENBQVA7Ozs7Ozs7c0JDTlU7OzthQUNOSSxJQUFMOzs7OzsrQkFHSTs7Z0JBRUNDLElBQUksSUFBSUMsY0FBSixFQUFSOztjQUVFQyxJQUFGLENBQU8sTUFBUCxFQUFlLFdBQWYsRUFBNEIsSUFBNUI7Y0FDRUMsZ0JBQUYsQ0FBbUIsY0FBbkIsRUFBbUMsb0JBQW5DO2NBQ0VBLGdCQUFGLENBQW1CLE1BQW5CLEVBQTJCLElBQTNCO2NBQ0VBLGdCQUFGLENBQW1CLE1BQW5CLEVBQTJCLElBQTNCO2NBQ0VBLGdCQUFGLENBQW1CLFFBQW5CLEVBQTZCLE1BQTdCO2NBQ0VDLGdCQUFGLENBQW1CLE1BQW5CLEVBQTJCLEtBQUtDLE9BQWhDO2NBQ0VDLGtCQUFGLEdBQXVCLFlBQVk7b0JBQzNCTixFQUFFTyxVQUFGLElBQWdCLENBQWhCLElBQXFCUCxFQUFFUSxNQUFGLElBQVksR0FBckMsRUFBMEM7YUFEOUM7Y0FHRUMsSUFBRixDQUFPLFFBQVA7Ozs7a0NBSU07aUJBQ0RDLElBQUwsR0FBYUMsS0FBS0MsS0FBTCxDQUFXLEtBQUtDLFlBQWhCLENBQWI7b0JBQ1FDLEdBQVIsQ0FBWSxLQUFLSixJQUFqQjs7Ozs7O0FDeEJSO0FBQ0EsQUFDQSxBQUVBLElBQWFLLEtBQWI7bUJBQ2dCbEIsSUFBWixFQUFrQjs7O2FBQ1RtQixLQUFMLEdBQWFuQixJQUFiLENBRGM7YUFFVG9CLE1BQUwsR0FBYyxLQUFLQyxVQUFMLEVBQWQ7YUFDS3hCLE1BQUwsR0FBYyxLQUFLeUIsV0FBTCxFQUFkO2FBQ0tDLFNBQUw7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxQ0FtQlM7O2dCQUVMQyxVQUFVbkMsU0FBU29DLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBZDtvQkFDUUMsU0FBUixHQUFvQixlQUFwQjtnQkFDSVAsUUFBUSxLQUFLQSxLQUFqQjtrQkFDTVEsYUFBTixDQUFvQkMsWUFBcEIsQ0FBaUNKLE9BQWpDLEVBQTBDTCxLQUExQztvQkFDUVUsV0FBUixDQUFvQlYsS0FBcEI7bUJBQ09LLE9BQVA7Ozs7c0NBR1U7bUJBQ0gsSUFBSXpCLE1BQUosQ0FBVyxLQUFLb0IsS0FBTCxDQUFXekIsS0FBdEIsQ0FBUDs7OztvQ0FHUTtpQkFDSG9DLElBQUwsR0FBWSxJQUFJQyxNQUFKLEVBQVo7Ozs7OztBQ3hDUixJQUFJL0IsT0FBT1osT0FBTyxDQUFQLENBQVg7QUFDQSxJQUFJK0IsUUFBUSxJQUFJRCxLQUFKLENBQVVsQixJQUFWLENBQVosQ0FDQTs7OzsifQ==
